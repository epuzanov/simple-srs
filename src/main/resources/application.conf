include "substances-core.conf"

##################################################################
# MAIN CONFIGURATION                                            ##
##################################################################
server.port=8080
spring.application.name="substances"
ix.home=${spring.application.name}".ix"

application.host="http://localhost:8080"
application.host=${?APPLICATION_HOST}

# Secure session off for dev, but if using HTTPS it's better to have it on
gsrs.sessions.sessionSecure=false

gsrs.substances.molwitch.enabled=true

# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
#debug=true
spring.main.allow-bean-definition-overriding=true

# export path
ix.ginas.export.path = "./exports"

# maximum file upload size
spring.servlet.multipart.max-file-size=512MB
spring.servlet.multipart.max-request-size=512MB

##################################################################
# SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
##################################################################

# turn off rabbit mq check for now since we don't use it otherwise it wil say we ar down
management.health.rabbit.enabled: false

##################################################################
# EUREKA SETTINGS                                               ##
##################################################################

eureka.instance.hostname=${spring.application.name}
eureka.client.serviceUrl.defaultZone="http://localhost:8761/eureka"
eureka.client.serviceUrl.defaultZone=${?EUREKA_SERVICE_URL}
#turn off eureka for now
eureka.client.enabled=false
eureka.client.enabled=${?EUREKA_CLIENT_ENABLED}

##################################################################
# DATABASE CONNECTION                                           ##
##################################################################

ix.h2 {
        base = ./${ix.home}/h2
      }

spring.datasource.url="jdbc:h2:"${ix.h2.base}"/appinxight;MODE=Oracle;AUTO_SERVER=TRUE"
spring.datasource.url=${?DB_URL_SUBSTANCES}
spring.datasource.username=${?DB_USERNAME}
spring.datasource.password=${?DB_PASSWORD}
spring.datasource.connectionTimeout=120000
spring.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
spring.datasource.maximumPoolSize=50
spring.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
spring.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE_SUBSTANCES}
spring.jpa.database-platform=${?DB_DIALECT}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=${?DB_DDL_AUTO}
spring.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
spring.hibernate.show-sql=false

##################################################################
# API SETTINGS                                                  ##
##################################################################

substanceAPI.BaseUrl="http://localhost:8080/"
substanceAPI.BaseUrl=${?API_URL}
gsrs.microservice.applications.api.baseURL=${substanceAPI.BaseUrl}"applications"
gsrs.microservice.applications.api.baseURL=${?MS_URL_APPLICATIONS}
gsrs.microservice.clinicaltrialsus.api.baseURL=${substanceAPI.BaseUrl}"clinical-trials"
gsrs.microservice.clinicaltrialsus.api.baseURL=${?MS_URL_CLINICAL_TRIALS}
gsrs.microservice.clinicaltrialsus.api.baseURL=${?MS_URL_CLINICAL_TRIALS_US}
gsrs.microservice.clinicaltrialseurope.api.baseURL=${substanceAPI.BaseUrl}"clinical-trials"
gsrs.microservice.clinicaltrialseurope.api.baseURL=${?MS_URL_CLINICAL_TRIALS}
gsrs.microservice.clinicaltrialseurope.api.baseURL=${?MS_URL_CLINICAL_TRIALS_EUROPE}
gsrs.microservice.products.api.baseURL=${substanceAPI.BaseUrl}"products"
gsrs.microservice.products.api.baseURL=${?MS_URL_PRODUCTS}

##################################################################
# CONFIGURATIONS VALIDATORS, PROCESSORS, EXPORT, etc            ##
##################################################################

ix.ginas.approvalIdGenerator.generatorClass="ix.ginas.utils.UNIIGenerator"
ix.ginas.approvalIdGenerator.generatorClass=${?APPROVALID_GENERATOR}
ix.ginas.approvalIdGenerator.parameters.name=${?APPROVALID_NAME}
ix.ginas.approvalIdGenerator.parameters.codeSystem=${?APPROVALID_CODESYSTEM}

gsrs.crypto = {
    "jsonWebKeys": { "filename": "keystore.jwks" },
    "privateKeyId": "localhost",
    "contentAlgorithm": "A256GCM",
    "keyAlgorithm": "RSA_OAEP",
    "zipAlgorithm": "DEF",
    "signatureAlgorithm": "RS256",
    "strictVerification": false,
    "metadataTemplate": "Exported on ${date} by ${user} from ${verified} source ${source} (SRS schema version:${version})",
    "dateFormat": "yyyy-MM-dd HH:mm:ss"
}

ix.ginas.export.exporterfactories.substances += {
    "exporterFactoryClass": "gsrs.module.substance.exporters.JsonPortableExporterFactory",
    "parameters": {
        "format": {
            "extension": "gsrsp",
            "displayName": "Json Portable Export (gsrsp) File"
        },
        "sign": true,
        "originBase": "http://localhost:8080/ginas/app/beta/substances/"
    }
}

##################################################################
# LEGACY AUTHENTICATION                                         ##
##################################################################

ix.authentication.allownonauthenticated = ${?AUTH_ALLOW_NONAUTH}
ix.authentication.autoregister = ${?AUTH_AUTOREGISTER}
ix.authentication.autoregisteractive = ${?AUTH_AUTOREGISTERACTIVE}
ix.authentication.sysadmin-email = ${?AUTH_SYSADMIN_EMAIL}
ix.authentication.trustheader = ${?AUTH_TRUST_HEADER}
ix.authentication.usernameheader = ${?AUTH_USERNAME_HEADER}
ix.authentication.useremailheader = ${?AUTH_EMAIL_HEADER}
ix.authentication.userrolesheader = ${?AUTH_ROLES_HEADER}

##################################################################
# CUSTOM CONFIGURATION                                          ##
##################################################################

include "conf/substances.conf"
include "substances.conf"
