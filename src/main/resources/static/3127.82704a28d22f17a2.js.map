{"version":3,"mappings":"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","names":["i0","AuditInfoComponent","v","selectors","ctx_r1","LinkFormComponent","cvService","dialog","utilsService","overlayContainerService","substanceFormService","g","this","EventEmitter","getVocabularies","overlayContainer","getContainerElement","updateDisplay","subscriptions","forEach","subscription","unsubscribe","privateLink","set","link","sites","concat","remaining","emitLinkUpdate","siteDisplay","siteString","$$deletedCode","newUUID","deleteTimer","setTimeout","i","linkDeleted","emit","clearTimeout","getDomainVocabulary","subscribe","linkageTypes","response","NUCLEIC_ACID_LINKAGE","list","push","dialogRef","open","SubunitSelectorDialogComponent","data","card","width","style","zIndex","dialogSubscription","afterClosed","newLinks","u","ctx","ctx_r5","SubstanceFormLinksCardComponent","substanceFormLinksService","scrollToService","gaService","d","analyticsEventCategory","canAddItemUpdate","menuLabelUpdate","linksSubscription","substanceLinks","s","links","getRemainingSites","subunitsSubscription","substanceSubunits","subunits","componentDestroyed","linkArray","subunitArray","unit","sequence","length","subunitIndex","residueIndex","remainingSites","filter","some","obj2","item","invalidSites","addOtherLink","addSubstanceLink","scrollToElement","deleteSubstanceLink","SubstanceCardBaseFilteredList","SubstanceFormLinksModule","f","CommonModule","DynamicComponentLoaderModule","SubstanceFormModule","MatDividerModule","MatIconModule","MatButtonModule","ScrollToModule","MatFormFieldModule","ReactiveFormsModule","FormsModule","MatPaginatorModule","MatTooltipModule","MatButtonToggleModule","MatInputModule","MatSelectModule"],"sources":["./src/app/core/substance-form/audit-info/audit-info.component.html","./src/app/core/substance-form/audit-info/audit-info.component.ts","./src/app/core/substance-form/links/link-form.component.html","./src/app/core/substance-form/links/link-form.component.ts","./src/app/core/substance-form/links/substance-form-links_card.component.html","./src/app/core/substance-form/links/substance-form-links_card.component.ts","./src/app/core/substance-form/links/substance-form-links.module.ts"],"sourcesContent":["<div class = 'audit-container' *ngIf = \"source\">\n  <div class = \"name\" *ngIf = 'source.createdBy'><b class = 'static'>Created By:</b> {{ source.createdBy}} </div>\n  <div class = \"date\" *ngIf = 'source.created'><b class = 'static'>on</b> {{ source.created | date:'medium'}}</div>\n  <div class = \"spacer\" *ngIf = 'source.created && source.lastEdited'> <b>-</b> </div>\n  <div class = \"name\" *ngIf = 'source.lastEditedBy'><b class = 'static'>Last Edited By</b>: {{ source.lastEditedBy}} </div>\n  <div class = \"date\" *ngIf = 'source.lastEdited'><b class = 'static'>on</b> {{ source.lastEdited | date:'medium'}}</div>\n</div>\n\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-audit-info',\n  templateUrl: './audit-info.component.html',\n  styleUrls: ['./audit-info.component.scss']\n})\nexport class AuditInfoComponent implements OnInit {\n  @Input() source: any;\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n","<div class=\"link-form-container\">\n  <div *ngIf=\"link.$$deletedCode\" class=\"notification-backdrop\">\n    Deleted&nbsp;\n    <button mat-icon-button matTooltip=\"Undo\" (click)=\"undoDelete()\">\n      <mat-icon svgIcon=\"undo\"></mat-icon>\n    </button>\n  </div>\n  <div class=\"form-row\">\n    <div class=\"delete-container\">\n      <button mat-icon-button matTooltip=\"Delete link\" (click)=\"deleteLink()\">\n        <mat-icon svgIcon=\"delete_forever\"></mat-icon>\n      </button>\n    </div>\n    <div class = \"type\">\n      <app-cv-input domain = \"NUCLEIC_ACID_LINKAGE\" title = \"Sequence Type\" (valueChange) = \"privateLink.linkage = $event\" [model] = \"privateLink.linkage\"></app-cv-input>\n    </div>\n    <div class = \"addRemaining\">\n      <button mat-flat-button mat-primary matTooltip=\"Add remaining {{remaining.length}} sites\" [disabled] = \"remaining.length === 0\" (click)=\"addRemainingSites()\">\n       add remaining {{remaining.length}} sites\n      </button>\n    </div>\n\n    <div class = \"links\">\n      <div class=\"label\">link</div>\n      {{siteDisplay}}\n      <button mat-icon-button matTooltip=\"Select sites from display\" (click)=\"(openDialog())\">\n        <mat-icon svgIcon=\"edit\"></mat-icon>\n      </button>\n    </div>\n  </div>\n  <app-audit-info [source] = \"privateLink\"></app-audit-info>\n</div>\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Link, Linkage, Site} from '@gsrs-core/substance';\nimport {Subscription} from 'rxjs';\nimport {ControlledVocabularyService} from '@gsrs-core/controlled-vocabulary';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UtilsService} from '@gsrs-core/utils';\nimport {OverlayContainer} from '@angular/cdk/overlay';\nimport {SubstanceFormService} from '@gsrs-core/substance-form/substance-form.service';\nimport {SubunitSelectorDialogComponent} from '@gsrs-core/substance-form/subunit-selector-dialog/subunit-selector-dialog.component';\n\n@Component({\n  selector: 'app-link-form',\n  templateUrl: './link-form.component.html',\n  styleUrls: ['./link-form.component.scss']\n})\nexport class LinkFormComponent implements OnInit, OnDestroy {\n\n  privateLink: Linkage;\n  @Output() linkDeleted = new EventEmitter<Linkage>();\n  @Input() remaining: Array<Site>;\n  deleteTimer: any;\n  linkageTypes: any;\n  private subscriptions: Array<Subscription> = [];\n  private overlayContainer: HTMLElement;\n  siteDisplay: string;\n\n  constructor(\n    private cvService: ControlledVocabularyService,\n    private dialog: MatDialog,\n    private utilsService: UtilsService,\n    private overlayContainerService: OverlayContainer,\n    private substanceFormService: SubstanceFormService\n  ) { }\n\n  ngOnInit() {\n    this.getVocabularies();\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\n    this.updateDisplay();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  @Input()\n  set link(link: Link) {\n    this.privateLink = link;\n  }\n\n  get link(): Link {\n    this.updateDisplay();\n    return this.privateLink;\n  }\n\n  addRemainingSites(): void {\n    if (this.privateLink.sites) {\n      this.privateLink.sites = this.privateLink.sites.concat(this.remaining);\n    } else {\n      this.privateLink.sites = this.remaining;\n    }\n    this.updateDisplay();\n    this.substanceFormService.emitLinkUpdate();\n  }\n\n  updateDisplay(): void {\n    if (this.privateLink) {\n      this.siteDisplay = this.substanceFormService.siteString(this.privateLink.sites);\n\n    }\n  }\n\n  deleteLink(): void {\n    this.privateLink.$$deletedCode = this.utilsService.newUUID();\n      this.deleteTimer = setTimeout(() => {\n        this.linkDeleted.emit(this.link);\n        this.substanceFormService.emitLinkUpdate();\n      }, 2000);\n  }\n\n\n  undoDelete(): void {\n    clearTimeout(this.deleteTimer);\n    delete this.privateLink.$$deletedCode;\n  }\n\n  getVocabularies(): void {\n    const subscription = this.cvService.getDomainVocabulary('NUCLEIC_ACID_LINKAGE').subscribe(response => {\n      this.linkageTypes = response['NUCLEIC_ACID_LINKAGE'].list;\n    });\n    this.subscriptions.push(subscription);\n  }\n\n  openDialog(): void {\n\n    const dialogRef = this.dialog.open(SubunitSelectorDialogComponent, {\n      data: {'card': 'link', 'link': this.privateLink.sites},\n      width: '1040px'\n    });\n    this.overlayContainer.style.zIndex = '1002';\n\n    const dialogSubscription = dialogRef.afterClosed().subscribe(newLinks => {\n      this.overlayContainer.style.zIndex = null;\n      if (newLinks) {\n        this.privateLink.sites = newLinks;\n      }\n      this.updateDisplay();\n      this.substanceFormService.emitLinkUpdate();\n    });\n    this.subscriptions.push(dialogSubscription);\n  }\n\n}\n","<div class=\"responsive\">\n  <div class = \"form-row\">\n  </div>\n  <div class = 'form-row' [ngClass] = \"invalidSites === 0?'':'too-many'\">Remaining Links: {{invalidSites === 0?remainingSites.length : invalidSites}}</div>\n  <div class = \"alternate-backgrounds\" *ngFor = \"let links of links; last as isLast; index as index\"  appScrollToTarget [id]=\"'substance-other-links-' + index\" >\n    <app-link-form [link]=\"links\" [remaining] = 'remainingSites' (linkDeleted)=\"deleteLink($event)\"></app-link-form>\n    <mat-divider class=\"form-divider\" [inset]=\"true\" *ngIf=\"!isLast\"></mat-divider>\n  </div>\n\n\n\n    <div class = \"form-row\">\n        <span class = \"middle-fill\"></span>\n           <button mat-button (click)=\"addOtherLink()\">\n            Add linkage <mat-icon svgIcon=\"add_circle_outline\"></mat-icon>\n          </button>\n</div>\n</div>\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport { SubstanceCardBaseFilteredList,  SubstanceCardBaseList} from '@gsrs-core/substance-form/base-classes/substance-form-base-filtered-list';\nimport {Link, Linkage, Site, Subunit} from '@gsrs-core/substance';\nimport {Subscription} from 'rxjs';\nimport {SubstanceFormService} from '@gsrs-core/substance-form/substance-form.service';\nimport {ScrollToService} from '@gsrs-core/scroll-to/scroll-to.service';\nimport {GoogleAnalyticsService} from '@gsrs-core/google-analytics';\nimport { SubstanceFormLinksService } from './substance-form-links.service';\n\n@Component({\n  selector: 'app-substance-form-links',\n  templateUrl: './substance-form-links_card.component.html',\n  styleUrls: ['./substance-form-links_card.component.scss']\n})\nexport class SubstanceFormLinksCardComponent extends SubstanceCardBaseFilteredList<Linkage>\n  implements OnInit, AfterViewInit, OnDestroy, SubstanceCardBaseList {\n\n  links: Array<Linkage>;\n  subunits: Array<Subunit>;\n  remainingSites: Array<Site> = [];\n  invalidSites = 0 ;\n  private subscriptions: Array<Subscription> = [];\n  constructor(\n    private substanceFormLinksService: SubstanceFormLinksService,\n    private substanceFormService: SubstanceFormService,\n    private scrollToService: ScrollToService,\n    public gaService: GoogleAnalyticsService,\n\n  ) {\n    super(gaService);\n    this.analyticsEventCategory = 'substance form links';\n  }\n\n  ngOnInit() {\n    this.canAddItemUpdate.emit(true);\n    this.menuLabelUpdate.emit('Links');\n  }\n\n  ngAfterViewInit() {\n    const linksSubscription = this.substanceFormLinksService.substanceLinks.subscribe(links => {\n      this.links = links;\n      this.getRemainingSites();\n    });\n    this.subscriptions.push(linksSubscription);\n    const subunitsSubscription = this.substanceFormService.substanceSubunits.subscribe(subunits => {\n      this.subunits = subunits;\n      this.getRemainingSites();\n    });\n   this.subscriptions.push(subunitsSubscription);\n\n  }\n\n  ngOnDestroy() {\n    this.componentDestroyed.emit();\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  getRemainingSites(): void {\n    let linkArray = [];\n    const subunitArray = [];\n    if (this.subunits && this.links) {\n      this.subunits.forEach(unit => {\n        if (unit.sequence != null && unit.sequence.length > 0) {\n          for (let i = 2; i <= unit.sequence.length; i++) {\n            subunitArray.push({subunitIndex: unit.subunitIndex, residueIndex: i});\n          }\n        }\n      });\n      this.links.forEach(link => {\n        linkArray = linkArray.concat(link.sites);\n      });\n    }\n    this.remainingSites = subunitArray.filter(item => {return !linkArray.some(function(obj2) {\n      return (item.subunitIndex === obj2.subunitIndex && item.residueIndex === obj2.residueIndex);\n     });\n    });\n      this.invalidSites = subunitArray.length - linkArray.length;\n\n  }\n\n  addItem(): void {\n    this.addOtherLink();\n  }\n\n  addOtherLink(): void {\n    this.substanceFormLinksService.addSubstanceLink();\n    setTimeout(() => {\n      this.scrollToService.scrollToElement(`substance-other-links-0`, 'center');\n    });\n  }\n\n  deleteLink(link: Link): void {\n    this.substanceFormLinksService.deleteSubstanceLink(link);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {DynamicComponentLoaderModule} from '@gsrs-core/dynamic-component-loader';\nimport {SubstanceFormModule} from '@gsrs-core/substance-form/substance-form.module';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ScrollToModule} from '@gsrs-core/scroll-to';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {SubstanceFormLinksCardComponent} from '@gsrs-core/substance-form/links/substance-form-links_card.component';\nimport {MatSelectModule} from '@angular/material/select';\nimport { LinkFormComponent } from './link-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SubstanceFormLinksCardComponent),\n    SubstanceFormModule,\n    MatDividerModule,\n    MatIconModule,\n    MatButtonModule,\n    ScrollToModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatPaginatorModule,\n    MatTooltipModule,\n    MatButtonToggleModule,\n    MatInputModule,\n    MatSelectModule\n  ],\n  exports: [\n  ],\n  declarations: [\n    SubstanceFormLinksCardComponent,\n    LinkFormComponent\n  ]\n})\nexport class SubstanceFormLinksModule { }\n"],"sourceRoot":"webpack:///","file":"3127.82704a28d22f17a2.js"}