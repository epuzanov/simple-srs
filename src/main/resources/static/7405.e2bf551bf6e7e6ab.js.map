{"version":3,"mappings":"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","names":["i0","AuditInfoComponent","y","selectors","ctx_r3","ctx_r4","ctx_r5","ctx_r6","SubstanceFormGlycosylationComponent","substanceFormGlycosylationService","substanceFormService","gaService","cvService","dialog","overlayContainerService","c","analyticsEventCategory","this","menuLabelUpdate","emit","overlayContainer","getContainerElement","getVocabularies","glycosylationSubscription","substanceGlycosylation","subscribe","i","glycosylation","subscriptions","push","forEach","subscription","unsubscribe","CGlycosylationSites","NGlycosylationSites","OGlycosylationSites","glycosylationType","emitGlycosylationUpdate","getDomainVocabulary","glycosylationTypes","response","GLYCOSYLATION_TYPE","list","type","dialogRef","open","SubunitSelectorDialogComponent","data","card","link","width","panelClass","style","zIndex","dialogSubscription","afterClosed","u","newLinks","sites","siteString","l","SubstanceCardBaseFilteredList","SubstanceFormGlycosylationModule","v","CommonModule","DynamicComponentLoaderModule","SubstanceFormModule","MatDividerModule","MatIconModule","MatButtonModule","ScrollToModule","MatFormFieldModule","ReactiveFormsModule","FormsModule","MatPaginatorModule","MatTooltipModule","MatButtonToggleModule","MatInputModule","MatOptionModule","MatSelectModule"],"sources":["./src/app/core/substance-form/audit-info/audit-info.component.html","./src/app/core/substance-form/audit-info/audit-info.component.ts","./src/app/core/substance-form/glycosylation/substance-form-glycosylation.component.html","./src/app/core/substance-form/glycosylation/substance-form-glycosylation.component.ts","./src/app/core/substance-form/glycosylation/substance-form-glycosylation.module.ts"],"sourcesContent":["<div class = 'audit-container' *ngIf = \"source\">\n  <div class = \"name\" *ngIf = 'source.createdBy'><b class = 'static'>Created By:</b> {{ source.createdBy}} </div>\n  <div class = \"date\" *ngIf = 'source.created'><b class = 'static'>on</b> {{ source.created | date:'medium'}}</div>\n  <div class = \"spacer\" *ngIf = 'source.created && source.lastEdited'> <b>-</b> </div>\n  <div class = \"name\" *ngIf = 'source.lastEditedBy'><b class = 'static'>Last Edited By</b>: {{ source.lastEditedBy}} </div>\n  <div class = \"date\" *ngIf = 'source.lastEdited'><b class = 'static'>on</b> {{ source.lastEdited | date:'medium'}}</div>\n</div>\n\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-audit-info',\n  templateUrl: './audit-info.component.html',\n  styleUrls: ['./audit-info.component.scss']\n})\nexport class AuditInfoComponent implements OnInit {\n  @Input() source: any;\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n","<div *ngIf=\"glycosylation\">\n  <div class=\"link-form-container\">\n  <div class=\"form-row\">\n    <div class=\"name-type\">\n      <app-cv-input key = \"Protein Glycosylation Type\" title = \"Glycosylation Type\" (valueChange) = \"glycosylation.glycosylationType = $event\" [model] = \"glycosylation.glycosylationType\"></app-cv-input>\n      <br/>\n      <br/>\n      <button mat-raised-button mat-primary (click) = 'clearAll()' >Clear Glycosylation</button>\n    </div>\n    <div class = 'types' >\n      <div class=\"sites\">\n        <div class=\"label row-label\"><b>C </b>Glycosylation Sites </div>\n        <div class = \"row-sites\"><button mat-icon-button matTooltip=\"Select sites from sequence\" (click)=\"(openDialog('C'))\">\n          <mat-icon svgIcon=\"edit\"></mat-icon>\n        </button>\n      {{siteDisplay(glycosylation.CGlycosylationSites)}}\n        </div>\n      </div>\n      <div class=\"sites\">\n        <div class=\"label row-label\"><b>N </b>Glycosylation Sites</div>\n        <div class = \"row-sites\"><button mat-icon-button matTooltip=\"Select sites from sequence\" (click)=\"(openDialog('N'))\">\n          <mat-icon svgIcon=\"edit\"></mat-icon>\n        </button>\n      {{siteDisplay(glycosylation.NGlycosylationSites)}}\n      </div>\n\n      </div>\n      <div class=\"sites\">\n        <div class=\"label row-label\"><b>O </b>Glycosylation Sites</div>\n        <div class = \"row-sites\"><button mat-icon-button matTooltip=\"Select sites from sequence\" (click)=\"(openDialog('O'))\">\n          <mat-icon svgIcon=\"edit\"></mat-icon>\n        </button>\n      {{siteDisplay(glycosylation.OGlycosylationSites)}}\n        </div>\n\n      </div>\n    </div>\n\n  </div>\n</div>\n<app-audit-info [source] = \"privateLink\"></app-audit-info>\n\n</div>\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport {SubstanceCardBaseFilteredList} from '@gsrs-core/substance-form/base-classes/substance-form-base-filtered-list';\nimport {Glycosylation, Site, SubstanceName} from '@gsrs-core/substance';\nimport {Subscription} from 'rxjs';\nimport {SubstanceFormService} from '@gsrs-core/substance-form/substance-form.service';\nimport {GoogleAnalyticsService} from '@gsrs-core/google-analytics';\nimport {ControlledVocabularyService, VocabularyTerm} from '@gsrs-core/controlled-vocabulary';\nimport {SubunitSelectorDialogComponent} from '@gsrs-core/substance-form/subunit-selector-dialog/subunit-selector-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {OverlayContainer} from '@angular/cdk/overlay';\nimport { SubstanceFormGlycosylationService } from './substance-form-glycosylation.service';\n@Component({\n  selector: 'app-substance-form-glycosylation',\n  templateUrl: './substance-form-glycosylation.component.html',\n  styleUrls: ['./substance-form-glycosylation.component.scss']\n})\n// eslint-disable-next-line max-len\nexport class SubstanceFormGlycosylationComponent extends SubstanceCardBaseFilteredList<SubstanceName> implements OnInit, AfterViewInit, OnDestroy {\n  glycosylation: Glycosylation;\n  glycosylationTypes: Array<VocabularyTerm>;\n  private subscriptions: Array<Subscription> = [];\n  private overlayContainer: HTMLElement;\n  constructor(\n    private substanceFormGlycosylationService: SubstanceFormGlycosylationService,\n    private substanceFormService: SubstanceFormService,\n    public gaService: GoogleAnalyticsService,\n    private cvService: ControlledVocabularyService,\n    private dialog: MatDialog,\n    private overlayContainerService: OverlayContainer\n\n  ) {\n    super(gaService);\n    this.analyticsEventCategory = 'substance form glycosylation';\n  }\n\n  ngOnInit() {\n    this.menuLabelUpdate.emit('Glycosylation');\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\n    this.getVocabularies();\n  }\n\n  ngAfterViewInit() {\n    const glycosylationSubscription = this.substanceFormGlycosylationService.substanceGlycosylation.subscribe(glycosylation => {\n      this.glycosylation = glycosylation;\n  });\n    this.subscriptions.push(glycosylationSubscription);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  clearAll(): void {\n    this.glycosylation.CGlycosylationSites = [];\n    this.glycosylation.NGlycosylationSites = [];\n    this.glycosylation.OGlycosylationSites = [];\n    this.glycosylation.glycosylationType = null;\n    this.substanceFormGlycosylationService.emitGlycosylationUpdate();\n  }\n\n  getVocabularies(): void {\n    const subscription = this.cvService.getDomainVocabulary('GLYCOSYLATION_TYPE').subscribe(response => {\n      this.glycosylationTypes = response['GLYCOSYLATION_TYPE'].list;\n    });\n    this.subscriptions.push(subscription);\n  }\n\n  openDialog(type: string): void {\n    let param = {};\n    if (type === 'N') {\n      param = this.glycosylation.NGlycosylationSites;\n    } else if (type === 'C') {\n      param = this.glycosylation.CGlycosylationSites;\n    } else {\n      param = this.glycosylation.OGlycosylationSites;\n    }\n      const dialogRef = this.dialog.open(SubunitSelectorDialogComponent, {\n      data: {'card': type, 'link': param},\n      width: '1040px',\n      panelClass: 'subunit-dialog'\n    });\n    this.overlayContainer.style.zIndex = '1002';\n    const dialogSubscription = dialogRef.afterClosed().subscribe(newLinks => {\n      this.overlayContainer.style.zIndex = null;\n      if (newLinks) {\n        if (type === 'N') {\n          this.glycosylation.NGlycosylationSites = newLinks;\n        } else if (type === 'C') {\n          this.glycosylation.CGlycosylationSites = newLinks;\n        } else {\n          this.glycosylation.OGlycosylationSites = newLinks;\n        }\n        this.substanceFormGlycosylationService.emitGlycosylationUpdate();\n      }\n    });\n    this.subscriptions.push(dialogSubscription);\n  }\n\n  siteDisplay(sites: Array<Site>) {\n    return this.substanceFormService.siteString(sites);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {DynamicComponentLoaderModule} from '@gsrs-core/dynamic-component-loader';\nimport {SubstanceFormModule} from '@gsrs-core/substance-form/substance-form.module';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ScrollToModule} from '@gsrs-core/scroll-to';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {SubstanceFormGlycosylationComponent} from '@gsrs-core/substance-form/glycosylation/substance-form-glycosylation.component';\nimport {ControlledVocabularyService} from '@gsrs-core/controlled-vocabulary';\nimport {MatOptionModule} from '@angular/material/core';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SubstanceFormGlycosylationComponent),\n    SubstanceFormModule,\n    MatDividerModule,\n    MatIconModule,\n    MatButtonModule,\n    ScrollToModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatPaginatorModule,\n    MatTooltipModule,\n    MatButtonToggleModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule\n  ],\n  exports: [\n  ],\n  declarations: [\n    SubstanceFormGlycosylationComponent\n  ]\n})\nexport class SubstanceFormGlycosylationModule { }\n"],"sourceRoot":"webpack:///","file":"7405.e2bf551bf6e7e6ab.js"}