{"version":3,"mappings":"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","names":["i0","ctx_r9","ctx_r11","ctx_r13","ctx_r23","ctx_r27","ctx_r28","ctx_r36","ctx_r38","ctx_r50","SubunitSelectorComponent","substanceFormService","substanceFormLinksService","gaService","cvService","render","this","EventEmitter","name","siteRange","privateFeature","set","feat","definition","subscribe","t","substanceType","substanceClass","unsubscribe","getVocabularies","link","length","sites","allSites","updateDisplay","sitesUpdate","emit","feature","convertFeature","selectState","startingCard","card","siteTotal","setTimeout","subunitsSubscription","subunitDisplaySequences","subunitSequences","subunits","forEach","testSequence","sequenceUnit","class","unitValue","showStyle","subscriptions","push","allSitesSubscription","concat","linksSubscription","substanceLinks","Links","residue","site","residueIndex","subunit","subunitIndex","type","sugarSubscription","substanceSugars","addStyle","subscription","event","featureName","featureUpdate","getDomainVocabulary","vocabulary","response","AMINO_ACID_RESIDUE","dictionary","features","sitesDisplay","cardTypeUpdate","unitIndex","vocab","undefined","display","arr","formatted","modification","other","toUpperCase","disulfide","splitDisplay","split","_type","sort","s1","s2","subUnitIndex","siteString","value","newobj","target","addClass","removeClass","disulfideArray","renderDisulfideArray","disulfidesUpdate","index","i","splice","toggleFeatureSite","toggleMultiDisulfide","inSites","some","r","filter","o","innerText","l","cysteineMessage","drawFeature","newsites","stringToSites","replace","valid","e","console","log","newFeature","addFeature","reverse","start","end","newFeatureArray","Number","siterange","pushFeature","pair","newArr","u","selectors","trigger","state","style","backgroundColor","transition","animate","SubunitSelectorDialogComponent","dialogRef","data","arguments","disableClose","backdropClick","close","invalidFeatureConfirm","disulfides","links","confirm","backup","JSON","parse","stringify","cloneDeep","Object","assign","warning","sentFeature","siteType","MAT_DIALOG_DATA","ctx"],"sources":["./src/app/core/substance-form/subunit-selector/subunit-selector.component.html","./src/app/core/substance-form/subunit-selector/subunit-selector.component.ts","./src/app/core/substance-form/subunit-selector-dialog/subunit-selector-dialog.component.html","./src/app/core/substance-form/subunit-selector-dialog/subunit-selector-dialog.component.ts"],"sourcesContent":["<div class = 'form-header'>\n  <div class = \"form-input\">\n<div *ngIf = \"card !== 'feature' && card!=='multi-disulfide'\" >\n  Sites:\n  <div *ngIf = \"card !== 'disulfide'\">\n  <input [ngModel] = \"sitesDisplay\" class = \"sites-input\" (ngModelChange)=\"manualInput($event)\" [ngClass]=\"valid ? 'valid':'invalid'\">\n  </div>\n  <div *ngIf = \"card === 'disulfide'\" class = 'disulfide-form' [ngClass]=\"valid ? 'valid':'invalid-cysteine'\">\n      <input [ngModel] = \"sitesDisplay\" (ngModelChange)=\"manualInput($event)\" class = \"sites-input disulfide-display\">\n\n    <div class = 'clear-button'>\n      <button mat-icon-button matTooltip=\"Clear Selection\"  (click) = \"clearSites()\">\n        <mat-icon svgIcon=\"clear\"></mat-icon>\n      </button>\n    </div>\n      <div class = 'cysteine-message'>{{cysteineMessage}}</div>\n\n    </div>\n</div>\n<div *ngIf = \"card == 'feature'\" >\n  <div class=\"form-row-feature\">\n  <mat-form-field class=\"name-type mat-form-field\">\n    <mat-label>Name</mat-label>\n  <input matInput class = \"sites-input\" [(ngModel)] = 'featureName' (change)=\"emitUpdate($event)\" placeholder=\"Name\" name =\"name\">\n  </mat-form-field>\n<div class = \"key-value-pair\">\n  <div class=\"key\">\n    Site Range\n  </div>\n<div class = 'value'>\n  <span *ngFor = \"let feat of newFeatureArray;index as index\" class = 'link-cont'>\n    <a (click) = \"deleteFeature(feat)\" class ='featlink' matTooltip = \"Delete sequence section\">\n        {{feat[0].subunitIndex}}_{{feat[0].residueIndex}}-{{feat[1].subunitIndex}}_{{feat[1].residueIndex}};\n      </a>\n  </span>\n  <span class=\"bold\">\n    <span *ngIf = \"newFeature[0]\">\n        {{newFeature[0].subunitIndex}}_{{newFeature[0].residueIndex}} -\n      </span>\n    <span *ngIf = \"newFeature[1]\">\n        {{newFeature[1].subunitIndex}}_{{newFeature[1].residueIndex}}\n      </span>\n  </span>\n</div>\n  <div class = 'clear-button'>\n    <button mat-icon-button matTooltip=\"Clear Current Selection\"  (click) = \"removeFeature()\">\n      <mat-icon svgIcon=\"clear\"></mat-icon>\n    </button>\n  </div>\n\n</div>\n\n\n  </div>\n\n  <div class=\"form-row-2\">\n    <div class = \"feature-step\">\n      <span *ngIf = \"selectState == 'first'\">Select Starting Site</span>\n      <span *ngIf = \"selectState == 'last'\">Select Ending Site</span>\n      <span *ngIf = \"selectState == 'finished' && (featureName === '' || featureName === null)\">Enter a Feature Name </span>\n      <span *ngIf = \"selectState == 'finished'\">Click a new site to add an additional range</span>\n    </div>\n  </div>\n\n</div>\n\n<div *ngIf = \"card === 'multi-disulfide'\">\n  <b>Links:</b>\n   <span *ngFor = \"let set of disulfideArray;index as index\" class = 'link-cont'>\n     <a (click) = \"deleteDisulfide(index)\" class ='featlink' matTooltip = \"Delete sequence section\">\n        {{set[0].subunitIndex}}_{{set[0].residueIndex}}, {{set[1].subunitIndex}}_{{set[1].residueIndex}};\n      </a>\n   </span>\n  <span class=\"bold\">\n    <span *ngIf = \"sites[0]\">\n        {{sites[0].subunitIndex}}_{{sites[0].residueIndex}} -\n      </span>\n    <span *ngIf = \"newFeature[1]\">\n        {{sites[1].subunitIndex}}_{{sites[1].residueIndex}}\n      </span>\n  </span>\n<br/>\n  <div class ='note' *ngIf = 'disulfideArray && disulfideArray.length > 0'>click on a link above to delete it, or another starting site to add additional links</div>\n  <div *ngIf = '!disulfideArray || disulfideArray.length === 0'>Click on a starting site, then an ending site to create a new link</div>\n</div>\n    <div class = 'card-selector' *ngIf = 'startingCard === \"any\"'>\n      <mat-form-field class = \"top-padding\">\n        <mat-label>Select link type to add</mat-label>\n        <mat-select (valueChange)=\"switchType($event)\" name=\"food\">\n       <!--   <mat-option value = 'feature'>\n            <span>Feature</span>\n          </mat-option>-->\n          <mat-option value = \"other\" disabled>\n            <span>Other Link</span>\n          </mat-option>\n          <mat-option value = \"CGlycosylation\">\n            <span>C-Glycosylation Sites</span>\n          </mat-option>\n          <mat-option value = \"NGlycosylation\">\n            <span>N-Glycosylation Sites</span>\n          </mat-option>\n          <mat-option value = \"OGlycosylation\">\n            <span>O-Glycosylation Sites</span>\n          </mat-option>\n          <mat-option value = \"disulfide\">\n            <span>Disulfide Link</span>\n          </mat-option>\n          <mat-option value = \"modification\" disabled>\n            <span>Structural Modification</span>\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n    </div>\n  </div>\n<div class = \"key-row\" *ngIf = 'substanceType === \"protein\"'>\n    Key:\n  <br/>\n  <div class = \"key-container\">\n    <div class = \"key-label\"><div class = 'C-Glycosylation key-color'> </div>C-Glycosylation</div>\n    <div class = \"key-label\"><div class = 'other key-color'> </div>Other Link</div>\n  </div>\n    <div class = \"key-container\">\n  <div class = \"key-label\"><div class = 'O-Glycosylation key-color'> </div>O-Glycosylation</div>\n  <div class = \"key-label\"><div class = 'modification key-color'> </div>Modification</div>\n    </div>\n    <div class = \"key-container\">\n      <div class = \"key-label\"><div class = 'N-Glycosylation key-color'> </div>N-Glycosylation</div>\n  <div class = \"key-label\"><div class = 'disulfide key-color'> </div>Disulfide Link</div>\n</div>\n  <div class = \"key-container\">\n    <div class = \"key-label\"><div class = 'feature key-color'> </div>Feature</div>\n    <div class = \"key-label\"><div class = 'chosen key-color'> </div>currently selected</div>\n  </div>\n\n</div>\n</div>\n<mat-dialog-content>\n<span *ngIf = \"showStyle\">\n<div class=\"subunit-sequence\" *ngFor=\"let sequence of subunitSequences\" >\n  <h4>Subunit {{sequence.subunitIndex}}</h4>\n  <div class=\"responsive\">\n      <div *ngFor = \"let set of sequence.subsections;last as last1\"  class=\"sequence-section-group\">\n        <div *ngFor = \"let num of set; last as last2\" class= \"sequence-section\" [ngClass] = \"last1 && last2? 'last-section' : ''\" >\n          <div class = \"section-number\">{{num[1]}}</div>\n          <div class = section-units-container >\n          <span *ngFor = \"let subunit of sequence.subunits.slice(num[0],num[1])\"  class=\"section-unit\" [ngClass] = \"last1 && last2? 'last-units' : ''\" >\n              <a class = \"selectedSite siteref\" [id]=\"sequence.subunitIndex + '_' + subunit.unitIndex\"  [ngClass]=\"subunit.class\" [@errorFlash]\n                 (click) = \"toggleSite(sequence.subunitIndex, subunit.unitIndex, subunit.unitValue, $event)\" matTooltipClass=\"unit-tooltip\"\n                 matTooltip =\"{{getTooltipMessage(sequence.subunitIndex, subunit.unitIndex, subunit.unitValue,subunit.class || '').join('\\n')}}\">{{subunit.unitValue}}</a>\n        </span>\n          </div>\n        </div>\n      </div>\n  </div>\n</div>\n</span>\n  <div *ngIf = \"!showStyle\" >\n    Total sequence length of <b>{{siteTotal}}</b> is too long to display. Please enter sites manually\n  </div>\n\n  </mat-dialog-content>\n","import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, Renderer2 } from '@angular/core';\nimport { Feature, Glycosylation, Link, Site, SubstanceAmount, Subunit } from '@gsrs-core/substance';\nimport { SubstanceFormService } from '@gsrs-core/substance-form/substance-form.service';\nimport { GoogleAnalyticsService } from '@gsrs-core/google-analytics';\nimport { ControlledVocabularyService, VocabularyTerm } from '@gsrs-core/controlled-vocabulary';\nimport { Subscription } from 'rxjs';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { SubstanceFormLinksService } from '../links/substance-form-links.service';\n\n@Component({\n  selector: 'app-subunit-selector',\n  templateUrl: './subunit-selector.component.html',\n  styleUrls: ['./subunit-selector.component.scss'],\n  animations: [\n    trigger('errorFlash', [\n      state('initial', style({\n        backgroundColor: 'white'\n      })),\n      state('final', style({\n        backgroundColor: 'pink'\n      })),\n      transition('initial=>final', animate('1000ms')),\n      transition('final=>initial', animate('500ms'))\n    ]),\n  ]\n})\nexport class SubunitSelectorComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() card: any;\n  @Input() link?: Array<any>;\n  @Output() sitesUpdate = new EventEmitter<Array<Site>>();\n  @Output() featureUpdate = new EventEmitter<any>();\n  @Output() disulfidesUpdate = new EventEmitter<any>();\n  @Output() cardTypeUpdate = new EventEmitter<string>();\n\n  privateFeature: Feature = { name: '', siteRange: '' };\n  sites: Array<any> = [];\n  sitesDisplay: string;\n  substanceType: string;\n  subunits: Array<Subunit>;\n  otherLinks: Array<Link>;\n  glycosylation: Glycosylation;\n  allSites: Array<DisplaySite> = [];\n  vocabulary: { [vocabularyTermValue: string]: VocabularyTerm } = {};\n  private subscriptions: Array<Subscription> = [];\n  features: Array<Feature>;\n  featureName?: string;\n  selectState: string;\n  newFeature: Array<Site> = [];\n  subunitSequences: Array<TestSequence> = [];\n  currentState = 'initial';\n  newFeatureArray: Array<Array<Site>> = [];\n  valid = true;\n  cysteineMessage: string;\n  siteTotal: number;\n  disulfideArray: Array<Array<any>> = [];\n  showStyle = true;\n  startingCard: string;\n\n  constructor(\n    private substanceFormService: SubstanceFormService,\n    private substanceFormLinksService: SubstanceFormLinksService,\n    public gaService: GoogleAnalyticsService,\n    private cvService: ControlledVocabularyService,\n    private render: Renderer2\n  ) {\n  }\n\n  @Input()\n  set feature(feat: Feature) {\n    this.privateFeature = feat;\n  }\n\n  get feature(): Feature {\n    return this.privateFeature;\n  }\n\n  ngOnInit() {\n    const definitionSubscription = this.substanceFormService.definition.subscribe(definition => {\n      this.substanceType = definition.substanceClass;\n    });\n    definitionSubscription.unsubscribe();\n    this.getVocabularies();\n    if (this.link && this.link.length > 0) {\n      this.sites = this.link;\n      this.allSites = [];\n      this.updateDisplay();\n      this.sitesUpdate.emit(this.sites);\n    } else {\n      this.link = [];\n    }\n    if (this.feature) {\n      this.convertFeature();\n    }\n    this.selectState = 'first';\n    this.startingCard = this.card;\n  }\n\n  ngAfterViewInit() {\n    this.siteTotal = 0;\n    if ((!this.link.length) || (this.link.length === 0)) {\n      this.selectState = 'first';\n    } else if (this.link.length === 1) {\n      this.selectState = 'last';\n    } else if (this.link.length === 2) {\n      this.selectState = 'finished';\n    }\n    setTimeout(() => {\n      const subunitsSubscription = this.substanceFormService.subunitDisplaySequences.subscribe(subunits => {\n        this.subunitSequences = subunits;\n        this.subunitSequences.forEach(testSequence => {\n          this.siteTotal = this.siteTotal + testSequence.subunits.length;\n          if (this.card === 'disulfide') {\n            testSequence.subunits.forEach(sequenceUnit => {\n              if (sequenceUnit.unitValue !== 'C') {\n                sequenceUnit.class = 'unavailable';\n              } else {\n                sequenceUnit.class = 'cys';\n              }\n            });\n          }\n          this.siteTotal > 5000 ? this.showStyle = false : this.showStyle = true;\n        });\n\n        if (this.feature) {\n          this.convertFeature();\n        }\n      });\n      this.subscriptions.push(subunitsSubscription);\n\n\n      const allSitesSubscription = this.substanceFormService.allSites.subscribe(allSites => {\n        this.allSites = this.allSites.concat(allSites);\n      });\n      this.subscriptions.push(allSitesSubscription);\n\n      if (this.card === 'link') {\n        const linksSubscription = this.substanceFormLinksService.substanceLinks.subscribe(Links => {\n          Links.forEach(link => {\n            if (link.sites) {\n              link.sites.forEach(site => {\n                const newLink: DisplaySite = { residue: site.residueIndex, subunit: site.subunitIndex, type: 'other' };\n                this.allSites.push(newLink);\n              });\n            }\n          });\n\n        });\n        this.subscriptions.push(linksSubscription);\n      } else if (this.card === 'sugar') {\n        const sugarSubscription = this.substanceFormService.substanceSugars.subscribe(Links => {\n          Links.forEach(link => {\n            if (link.sites) {\n              link.sites.forEach(site => {\n                const newLink: DisplaySite = { residue: site.residueIndex, subunit: site.subunitIndex, type: 'other' };\n                this.allSites.push(newLink);\n              });\n            }\n          });\n        });\n        this.subscriptions.push(sugarSubscription);\n      }\n      setTimeout(() => {\n        this.addStyle();\n      }, 100);\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  emitUpdate(event): void {\n    // ### no idea why this would be undefined if it's declared earlier\n    if (!this.privateFeature) {\n      this.privateFeature = { name: this.featureName, siteRange: '' };\n    }\n    this.featureUpdate.emit(this.privateFeature);\n    this.privateFeature.name = this.featureName;\n  }\n\n  getVocabularies(): void {\n    this.cvService.getDomainVocabulary('AMINO_ACID_RESIDUE').subscribe(response => {\n      this.vocabulary = response['AMINO_ACID_RESIDUE'].dictionary;\n    }, error => {\n    });\n  }\n\n  switchType(event): void {\n    const type = event;\n    this.card = type;\n    this.sites = [];\n    this.features = [];\n    this.sitesDisplay = '';\n    this.selectState = 'first';\n    this.cardTypeUpdate.emit(type);\n    this.addStyle();\n  }\n\n  getTooltipMessage(subunitIndex: number, unitIndex: number, unitValue: string, type: string): any {\n    const vocab = (this.vocabulary[unitValue] === undefined ? 'UNDEFINED' : this.vocabulary[unitValue].display);\n    const arr = [];\n    const formatted = {\n      'modification': 'Structural Modification',\n      'other': 'Other Link',\n      'C-Glycosylation': 'C-Glycosylation',\n      'N-Glycosylation': 'N-Glycosylation',\n      'O-Glycosylation': 'O-Glycosylation',\n      'feature': this.substanceType.toUpperCase() + ' Feature',\n      'disulfide': 'Disulfide Link'\n    };\n    arr.push(`${subunitIndex} - ${unitIndex}: ${unitValue.toUpperCase()} (${vocab})`);\n    const splitDisplay = type.split(' ');\n    splitDisplay.forEach(_type => {\n      arr.push(formatted[_type] || '');\n    });\n    return arr;\n  }\n\n  updateDisplay(): void {\n    this.sites = this.sites.sort(function (s1, s2) {\n      if (s1.subUnitIndex > s2.subunitIndex) {\n        return 1;\n      } else if (s1.subunitIndex < s2.subunitIndex) {\n        return -1;\n      } else if (s1.residueIndex > s2.residueIndex) {\n        return 1;\n      } else if (s1.residueIndex < s2.residueIndex) {\n      } else {\n        return 1;\n      }\n    });\n    this.sitesDisplay = this.substanceFormService.siteString(this.sites);\n  }\n\n  toggleMultiDisulfide(subunit: any, residue: any, value: any, event): void {\n    const newobj = { subunitIndex: subunit, residueIndex: residue, event: event.target };\n    if (this.selectState === 'first') {\n      this.sites[0] = newobj;\n      this.render.addClass(event.target, 'chosen');\n      this.selectState = 'last';\n    } else if (this.selectState === 'last') {\n      if (this.sites[0] === newobj) {\n        this.selectState = 'first';\n        this.render.removeClass(event.target, 'chosen');\n      } else {\n        this.sites[1] = newobj;\n        this.disulfideArray.push(this.sites);\n        this.sites = [];\n        this.selectState = 'first';\n        this.renderDisulfideArray();\n        this.disulfidesUpdate.emit(this.disulfideArray);\n      }\n    }\n  }\n\n  deleteDisulfide(index: number): void {\n    this.disulfideArray[index].forEach(site => {\n      this.render.removeClass(site.event, 'new-disulfide');\n    });\n    this.disulfideArray.splice(index, 1);\n    this.disulfidesUpdate.emit(this.disulfideArray);\n  }\n\n  renderDisulfideArray(): void {\n    this.disulfideArray.forEach(set => {\n      set.forEach(site => {\n        this.render.removeClass(site.event, 'chosen');\n        this.render.addClass(site.event, 'new-disulfide');\n      });\n    });\n\n  }\n\n\n  toggleSite(subunit: any, residue: any, value: any, event): void {\n    const newobj = { subunitIndex: subunit, residueIndex: residue };\n    if (this.card === 'feature') {\n      this.toggleFeatureSite(subunit, residue, value, event);\n    } else if (this.card === 'multi-disulfide') {\n      this.toggleMultiDisulfide(subunit, residue, value, event);\n    } else {\n      const inSites = this.sites.some(r => (r.residueIndex === residue) && (r.subunitIndex === subunit));\n      if (this.card !== 'disulfide') {\n        if (inSites) {\n          this.sites = this.sites.filter(function (r) {\n            return (r.residueIndex !== residue) || (r.subunitIndex !== subunit);\n          });\n          this.render.removeClass(event.target, 'chosen');\n\n        } else {\n          this.sites.push(newobj);\n          this.render.addClass(event.target, 'chosen');\n        }\n        this.updateDisplay();\n        this.sitesUpdate.emit(this.sites);\n\n      } else {\n        if (inSites) {\n          this.render.removeClass(event.target, 'chosen');\n        } else if (this.selectState !== 'finished') {\n          this.render.removeClass(event.target, 'chosen');\n        }\n        if (event.target.innerText === 'C') {\n\n          if (this.selectState === 'first') {\n            if (!inSites) {\n              this.selectState = 'last';\n\n              this.render.addClass(event.target, 'chosen');\n              this.sites[0] = newobj;\n            } else {\n              this.render.removeClass(event.target, 'chosen');\n              this.sites = this.sites.filter(function (r) {\n                return (r.residueIndex !== residue) || (r.subunitIndex !== subunit);\n              });\n            }\n          } else if (this.selectState === 'last') {\n            if (!inSites) {\n              this.selectState = 'finished';\n              this.sites[1] = newobj;\n              this.render.addClass(event.target, 'chosen');\n            } else {\n              this.selectState = 'first';\n              this.sites = [];\n              this.render.removeClass(event.target, 'chosen');\n            }\n          } else if (this.selectState === 'finished') {\n            if (inSites) {\n              this.selectState = 'last';\n              this.sites = this.sites.filter(function (r) {\n                return (r.residueIndex !== residue) || (r.subunitIndex !== subunit);\n              });\n            } else {\n              this.cysteineMessage = 'You must clear existing sites to select new ones';\n            }\n          }\n          this.updateDisplay();\n          this.sitesUpdate.emit(this.sites);\n        } else {\n          this.render.addClass(event.target, 'invalid_blink');\n          setTimeout(\n            function () { this.render.removeClass(event.target, 'invalid_blink'); }, 2000);\n        }\n      }\n    }\n\n  }\n\n  clearSites(): void {\n    this.sites.forEach(site => {\n    this.subunitSequences[site.subunitIndex - 1].subunits[site.residueIndex - 1].class = '';\n    });\n    this.sites = [];\n    this.cysteineMessage = '';\n    this.selectState = 'first';\n    this.updateDisplay();\n\n  }\n\n  addStyle(): void {\n    if (this.subunitSequences && this.subunitSequences[0] && this.subunitSequences[0].subunits) {\n      this.subunitSequences.forEach(sites => {\n        sites.subunits.forEach(site => {\n          if (this.card === 'disulfide' || this.card === 'multi-disulfide') {\n            if (site.unitValue !== 'C') {\n              site.class = 'unavailable';\n            } else {\n              site.class = 'cys';\n            }\n          } else {\n            site.class = '';\n          }\n        });\n      });\n      this.allSites.forEach(site => {\n        if (this.subunitSequences[site.subunit - 1].subunits) {\n          if (this.subunitSequences[site.subunit - 1].subunits[site.residue - 1]){\n          if (this.subunitSequences[site.subunit - 1].subunits[site.residue - 1].class !== '') {\n            this.subunitSequences[site.subunit - 1].subunits[site.residue - 1].class\n              = this.subunitSequences[site.subunit - 1].subunits[site.residue - 1].class + ' ' + site.type;\n          } else {\n            this.subunitSequences[site.subunit - 1].subunits[site.residue - 1].class = site.type;\n          }\n        }\n      }\n      });\n      this.sites.forEach(site => {\n        if (this.subunitSequences[site.subunitIndex - 1].subunits) {\n          this.subunitSequences[site.subunitIndex - 1].subunits[site.residueIndex - 1].class = 'chosen';\n        } else {\n        }\n      });\n      if (this.features) {\n        this.features.forEach(feat => {\n          this.drawFeature(feat);\n        });\n      }\n    }\n\n  }\n\n  manualInput(event): void {\n    try {\n      const newsites = this.substanceFormService.stringToSites(event.replace(/ /g, ''));\n      if (this.sites !== newsites) {\n        if (this.card === 'disulfide') {\n          if (newsites.length < 3 && newsites.length > 0) {\n            this.sites[0] = newsites[0] ? newsites[0] : {};\n            this.sites[1] = newsites[1] ? newsites[1] : {};\n            this.valid = true;\n            this.sitesDisplay = event;\n            this.addStyle();\n          } else {\n            this.valid = false;\n          }\n        } else {\n          this.sites = newsites;\n          this.addStyle();\n          this.sitesUpdate.emit(this.sites);\n        }\n      } else {\n      }\n      this.valid = true;\n      this.sitesDisplay = event;\n    } catch (e) {\n      console.log(e);\n      this.valid = false;\n    }\n  }\n\n  // start feature specific\n\n  removeFeature(): void {\n    if (this.newFeature[1]) {\n      this.addFeature(this.newFeature, true);\n      this.addStyle();\n      this.selectState = 'first';\n    } else if (this.newFeature[0]) {\n      this.subunitSequences[this.newFeature[0].subunitIndex - 1].subunits[this.newFeature[0].residueIndex - 1].class = '';\n    }\n    this.newFeature = [];\n  }\n\n  addFeature(feature: Array<Site>, reverse?: boolean): void {\n    if (feature[0].subunitIndex === feature[1].subunitIndex) {\n      const subunitIndex = feature[0].subunitIndex;\n      let start = feature[0].residueIndex;\n      let end = feature[1].residueIndex;\n      if (feature[0].residueIndex > feature[1].residueIndex) {\n        start = feature[1].residueIndex;\n        end = feature[0].residueIndex;\n      }\n      for (let i = start; i <= end; i++) {\n        if (reverse) {\n          this.subunitSequences[subunitIndex - 1].subunits[i - 1].class = '';\n        } else {\n          this.subunitSequences[subunitIndex - 1].subunits[i - 1].class = 'chosen';\n        }\n\n      }\n    }\n  }\n\n  deleteFeature(event): void {\n    for (let i = event[0].residueIndex; i <= event[1].residueIndex; i++) {\n      this.subunitSequences[event[0].subunitIndex - 1].subunits[i - 1].class = '';\n    }\n    this.newFeatureArray = this.newFeatureArray.filter(feat => ((event[0] !== feat[0]) && (event[1] !== feat[1])));\n\n  }\n\n  pushFeature(): void {\n    if (this.newFeature.length === 2) {\n      this.newFeatureArray.push(this.newFeature);\n      this.newFeature = [];\n      this.selectState = 'first';\n    }\n  }\n\n  drawFeature(feature: Feature): void {\n    const sites = feature.siteRange.split('-');\n    const start = Number(sites[0].split('_')[1]);\n    const end = Number(sites[1].split('_')[1]);\n    const subunit = Number(sites[0].split('_')[0]);\n    for (let i = start; i <= end; i++) {\n      this.subunitSequences[subunit - 1].subunits[i - 1].class = 'feature';\n    }\n\n  }\n\n  toggleFeatureSite(subunit: any, residue: any, value: any, event): void {\n    const newobj = { subunitIndex: subunit, residueIndex: residue };\n    if (this.selectState === 'first') {\n      this.newFeature[0] = newobj;\n      this.render.addClass(event.target, 'chosen');\n      this.selectState = 'last';\n    } else if (this.selectState === 'last') {\n      if ((this.newFeature[0].subunitIndex === newobj.subunitIndex) &&\n        (this.newFeature[0].residueIndex === newobj.residueIndex)) {\n\n        this.selectState = 'first';\n        this.render.removeClass(event.target, 'chosen');\n      } else {\n        this.newFeature[1] = newobj;\n        this.addFeature(this.newFeature);\n        this.selectState = 'finished';\n        let siterange = '';\n        this.newFeatureArray.forEach(feat => {\n          siterange = siterange + (feat[0].subunitIndex +\n            '_' + feat[0].residueIndex + '-' + feat[1].subunitIndex + '_' + feat[1].residueIndex + ';');\n        });\n        siterange = siterange + (this.newFeature[0].subunitIndex +\n          '_' + this.newFeature[0].residueIndex + '-' + this.newFeature[1].subunitIndex + '_' + this.newFeature[1].residueIndex);\n        this.privateFeature = { 'name': this.featureName || '', 'siteRange': siterange };\n        this.featureUpdate.emit(this.privateFeature);\n      }\n    } else if (this.selectState === 'finished') {\n      this.pushFeature();\n      this.newFeature[0] = newobj;\n      this.render.addClass(event.target, 'chosen');\n      this.selectState = 'last';\n      let siterange = '';\n      this.newFeatureArray.forEach(feat => {\n        siterange = siterange + (feat[0].subunitIndex +\n          '_' + feat[0].residueIndex + '-' + feat[1].subunitIndex + '_' + feat[1].residueIndex);\n      });\n      this.privateFeature = { 'name': this.featureName || '', 'siteRange': siterange };\n      this.featureUpdate.emit(this.privateFeature);\n    }\n  }\n\n  convertFeature(): void {\n    this.newFeatureArray = [];\n    const siteSplit = this.feature.siteRange.split(';');\n    siteSplit.forEach(pair => {\n      const sites = pair.split('-');\n      const start = Number(sites[0].split('_')[1]);\n      const end = Number(sites[1].split('_')[1]);\n      const subunit = Number(sites[0].split('_')[0]);\n      const newArr = [{ subunitIndex: subunit, residueIndex: start }, { subunitIndex: subunit, residueIndex: end }];\n      this.newFeatureArray.push(newArr);\n      this.addFeature(newArr);\n    });\n    this.newFeature = [];\n    this.featureName = this.feature.name;\n    this.selectState = 'first';\n  }\n\n  // end Feature specific\n\n}\n\n\n\ninterface SequenceUnit {\n  unitIndex: number;\n  unitValue: string;\n  class?: string;\n  type?: string;\n  event?: any;\n}\n\ninterface DisplaySite {\n  type: string;\n  subunit: number;\n  residue: number;\n}\n\n\ninterface TestSequence {\n  subunitIndex?: number;\n  subsections?: Array<any>;\n  subgroups?: Array<any>;\n  subunits?: Array<SequenceUnit>;\n}\n","<h1 mat-dialog-title  *ngIf = \"data.card !== 'feature'\">Select Sites</h1>\n<h1 mat-dialog-title *ngIf = \"data.card === 'feature'\">Add / Modify Feature</h1>\n\n       <app-subunit-selector  [card] = \"data.card\" [link] = \"data.link\" [feature] = \"data.feature? data.feature : null\" (disulfidesUpdate)=\"updateDisulfides($event)\" (sitesUpdate) = \"updateSites($event)\" (featureUpdate) = \"updateFeature($event)\" (cardTypeUpdate) = \"updateCardType($event)\"></app-subunit-selector>\n\n\n      <mat-dialog-actions>\n\n        <div class=\"actions\">\n      <button mat-button (click)=\"cancel()\">Cancel</button>\n      <button mat-button (click)=\"save()\">\n        Save\n      </button>\n        </div>\n        <div class = \"warning\">{{warning}}</div>\n      </mat-dialog-actions>\n\n\n","import {AfterViewInit, Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {cloneDeep} from 'lodash';\n\n@Component({\n  selector: 'app-subunit-selector-dialog',\n  templateUrl: './subunit-selector-dialog.component.html',\n  styleUrls: ['./subunit-selector-dialog.component.scss']\n})\nexport class SubunitSelectorDialogComponent implements OnInit, AfterViewInit {\n  feature: any;\n  warning = '';\n  disulfides: any;\n  siteType: string;\n  dataToSend: any;\n  backup: any;\n  constructor(\n    public dialogRef: MatDialogRef<SubunitSelectorDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any = {}\n  ) {dialogRef.disableClose = true; }\n\n  ngOnInit() {\n    this.dialogRef.backdropClick().subscribe(fun => {\n      if (this.data.card === 'feature') {\n        if (this.feature && this.feature.name && this.feature.name !== '') {\n          if (this.feature.siteRange) {\n            this.dialogRef.close(this.feature);\n          } else {\n            this.invalidFeatureConfirm();\n          }\n        } else {\n          this.invalidFeatureConfirm();\n        }\n      } else if (this.data.card === 'multi-disulfide') {\n        this.dialogRef.close(this.disulfides);\n       } else {\n        this.dialogRef.close(this.data.links);\n      }\n    });\n  }\n\n  invalidFeatureConfirm(): void {\n    const cn = confirm('Feature is missing information and will not be saved. Close the dialog anyway?');\n    if (cn) {\n      this.dialogRef.close();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.data.card === 'feature') {\n      if (this.feature && this.feature.name && this.feature.name !== '') {\n        if (this.feature.siteRange) {\n          this.backup = JSON.parse(JSON.stringify(this.feature));\n\n        } else {\n          this.backup = {};\n        }\n      } else {\n        this.backup = {};\n      }\n    } else if (this.data.card === 'multi-disulfide') {\n      this.backup = cloneDeep(this.disulfides);\n     } else {\n       const myClonedArray  = Object.assign([], this.data.links);\n      this.backup = cloneDeep(this.data.links);\n    }\n  }\n\n  save(): void {\n    if (this.data.card === 'feature') {\n      if (this.feature && this.feature.name  && this.feature.name !== '') {\n        if (this.feature.siteRange) {\n          this.dialogRef.close(this.feature);\n        } else {\n          this.warning = 'Select site Range(s) before saving';\n        }\n      } else {\n        this.warning = 'Enter a feature name before saving';\n      }\n    } else if (this.data.card === 'multi-disulfide') {\n      this.dialogRef.close(this.disulfides);\n    } else if (this.data.card === 'any') {\n\n      this.dialogRef.close(this.data);\n    } else {\n      this.dialogRef.close(this.data.links);\n    }\n  }\n\n  cancel(): void {\n    this.dialogRef.close(this.backup);\n  }\n  updateSites(sites: any): void {\n    this.data.links = sites;\n  }\n\n  updateFeature(feature: any): void {\n    this.feature = feature;\n    this.data.sentFeature = feature;\n  }\n\n  updateDisulfides(sites: any): void {\n    this.disulfides = sites;\n  }\n\n  updateCardType(type: string) {\n    this.data.siteType = type;\n  }\n\n}\n\n"],"sourceRoot":"webpack:///","file":"9401.f597bff8583f26c0.js"}