{"version":3,"mappings":"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","names":["i0","AuditInfoComponent","m","selectors","ctx_r1","OtherLinksFormComponent","cvService","dialog","utilsService","overlayContainerService","substanceFormService","f","this","EventEmitter","getVocabularies","overlayContainer","getContainerElement","updateDisplay","subscriptions","forEach","subscription","unsubscribe","privateLink","set","link","siteDisplay","siteString","sites","$$deletedCode","newUUID","deleteTimer","setTimeout","i","linkDeleted","emit","emitOtherLinkUpdate","clearTimeout","getDomainVocabulary","subscribe","linkageTypes","response","OTHER_LINKAGE_TYPE","list","push","dialogRef","open","SubunitSelectorDialogComponent","data","card","width","panelClass","style","zIndex","dialogSubscription","afterClosed","newLinks","backdropClick","d","ctx","ctx_r5","SubstanceFormOtherLinksCardComponent","substanceFormOtherLinksService","scrollToService","gaService","u","analyticsEventCategory","canAddItemUpdate","menuLabelUpdate","otherLinksSubscription","substanceOtherLinks","l","otherLinks","componentDestroyed","addOtherLink","addSubstanceOtherLink","scrollToElement","deleteSubstanceOtherLink","SubstanceCardBaseFilteredList","SubstanceFormOtherLinksModule","v","CommonModule","DynamicComponentLoaderModule","SubstanceFormModule","MatDividerModule","MatIconModule","MatButtonModule","ScrollToModule","MatFormFieldModule","ReactiveFormsModule","FormsModule","MatPaginatorModule","MatTooltipModule","MatButtonToggleModule","MatInputModule","MatSelectModule"],"sources":["./src/app/core/substance-form/audit-info/audit-info.component.html","./src/app/core/substance-form/audit-info/audit-info.component.ts","./src/app/core/substance-form/other-links/other-links-form.component.html","./src/app/core/substance-form/other-links/other-links-form.component.ts","./src/app/core/substance-form/other-links/substance-form-other-links-card.component.html","./src/app/core/substance-form/other-links/substance-form-other-links-card.component.ts","./src/app/core/substance-form/other-links/substance-form-other-links.module.ts"],"sourcesContent":["<div class = 'audit-container' *ngIf = \"source\">\n  <div class = \"name\" *ngIf = 'source.createdBy'><b class = 'static'>Created By:</b> {{ source.createdBy}} </div>\n  <div class = \"date\" *ngIf = 'source.created'><b class = 'static'>on</b> {{ source.created | date:'medium'}}</div>\n  <div class = \"spacer\" *ngIf = 'source.created && source.lastEdited'> <b>-</b> </div>\n  <div class = \"name\" *ngIf = 'source.lastEditedBy'><b class = 'static'>Last Edited By</b>: {{ source.lastEditedBy}} </div>\n  <div class = \"date\" *ngIf = 'source.lastEdited'><b class = 'static'>on</b> {{ source.lastEdited | date:'medium'}}</div>\n</div>\n\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-audit-info',\n  templateUrl: './audit-info.component.html',\n  styleUrls: ['./audit-info.component.scss']\n})\nexport class AuditInfoComponent implements OnInit {\n  @Input() source: any;\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n","<div class=\"link-form-container\">\n  <div *ngIf=\"link.$$deletedCode\" class=\"notification-backdrop\">\n    Deleted&nbsp;\n    <button mat-icon-button matTooltip=\"Undo\" (click)=\"undoDelete()\">\n      <mat-icon svgIcon=\"undo\"></mat-icon>\n    </button>\n  </div>\n  <div class=\"form-row\">\n    <div class=\"delete-container\">\n      <button mat-icon-button matTooltip=\"Delete link\" (click)=\"deleteLink()\">\n        <mat-icon svgIcon=\"delete_forever\"></mat-icon>\n      </button>\n    </div>\n    <div class = \"type\">\n      <app-cv-input domain = \"OTHER_LINKAGE_TYPE\" title = \"Sequence Type\" (valueChange) = \"link.linkageType = $event\" [model] = \"link.linkageType\"></app-cv-input>\n    </div>\n    <div class = \"links\">\n      <div class=\"label\">link</div>\n      {{siteDisplay}}\n        <button mat-icon-button matTooltip=\"Select sites from display\" (click)=\"(openDialog())\">\n          <mat-icon svgIcon=\"edit\"></mat-icon>\n        </button>\n    </div>\n  </div>\n  <app-audit-info [source] = \"link\"></app-audit-info>\n</div>\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Link, SubstanceReference} from '@gsrs-core/substance';\nimport {UtilsService} from '@gsrs-core/utils';\nimport {ControlledVocabularyService, VocabularyTerm} from '@gsrs-core/controlled-vocabulary';\nimport {MatDialog} from '@angular/material/dialog';\nimport {OverlayContainer} from '@angular/cdk/overlay';\nimport {Subscription} from 'rxjs';\nimport {SubunitSelectorComponent} from '@gsrs-core/substance-form/subunit-selector/subunit-selector.component';\nimport {SubunitSelectorDialogComponent} from '@gsrs-core/substance-form/subunit-selector-dialog/subunit-selector-dialog.component';\nimport {SubstanceFormService} from '@gsrs-core/substance-form/substance-form.service';\n\n@Component({\n  selector: 'app-other-links-form',\n  templateUrl: './other-links-form.component.html',\n  styleUrls: ['./other-links-form.component.scss']\n})\nexport class OtherLinksFormComponent implements OnInit, OnDestroy {\n\n  private privateLink: Link;\n  @Output() linkDeleted = new EventEmitter<Link>();\n  deleteTimer: any;\n  linkageTypes: any;\n  private subscriptions: Array<Subscription> = [];\n  private overlayContainer: HTMLElement;\n  siteDisplay: string;\n\n  constructor(\n  private cvService: ControlledVocabularyService,\n  private dialog: MatDialog,\n  private utilsService: UtilsService,\n  private overlayContainerService: OverlayContainer,\n  private substanceFormService: SubstanceFormService\n  ) { }\n\n  ngOnInit() {\n    this.getVocabularies();\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\n    this.updateDisplay();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  @Input()\n  set link(link: Link) {\n    this.privateLink = link;\n  }\n\n  get link(): Link {\n    return this.privateLink;\n  }\n  updateDisplay(): void {\n    this.siteDisplay = this.substanceFormService.siteString(this.privateLink.sites);\n  }\n  deleteLink(): void {\n    this.privateLink.$$deletedCode = this.utilsService.newUUID();\n      this.deleteTimer = setTimeout(() => {\n        this.linkDeleted.emit(this.link);\n        this.substanceFormService.emitOtherLinkUpdate();\n      }, 2000);\n  }\n\n  undoDelete(): void {\n    clearTimeout(this.deleteTimer);\n    delete this.privateLink.$$deletedCode;\n  }\n\n  getVocabularies(): void {\n    const subscription = this.cvService.getDomainVocabulary('OTHER_LINKAGE_TYPE').subscribe(response => {\n      this.linkageTypes = response['OTHER_LINKAGE_TYPE'].list;\n    });\n    this.subscriptions.push(subscription);\n  }\n\n  openDialog(): void {\n\n    const dialogRef = this.dialog.open(SubunitSelectorDialogComponent, {\n      data: {'card': 'other', 'link': this.privateLink.sites},\n      width: '1040px',\n      panelClass: 'subunit-dialog'\n    });\n    this.overlayContainer.style.zIndex = '1002';\n\n    const dialogSubscription = dialogRef.afterClosed().subscribe(newLinks => {\n      this.overlayContainer.style.zIndex = null;\n      if (newLinks) {\n        this.privateLink.sites = newLinks;\n        this.substanceFormService.emitOtherLinkUpdate();\n      }\n      this.updateDisplay();\n    });\n    const dialogSubscription2 = dialogRef.backdropClick().subscribe(sub => {     }\n    );\n\n    dialogSubscription2.unsubscribe();\n    this.subscriptions.push(dialogSubscription);\n  }\n\n\n}\n","<div class=\"flex-row\">\n  <span class=\"middle-fill\"></span>\n  <!-- <button mat-button (click)=\"addOtherLink()\">\n    Add link <mat-icon svgIcon=\"add_circle_outline\"></mat-icon>\n  </button> -->\n</div>\n  <div class = \"alternate-backgrounds\" *ngFor = \"let links of otherLinks; last as isLast; index as index\"  appScrollToTarget [id]=\"'substance-other-links-' + index\" >\n    <app-other-links-form [link]=\"links\" (linkDeleted)=\"deleteLink($event)\"></app-other-links-form>\n    <mat-divider class=\"form-divider\" [inset]=\"true\" *ngIf=\"!isLast\"></mat-divider>\n  </div>\n\n  <div class=\"flex-row\">\n      <span class = \"middle-fill\"></span>\n        <button mat-button (click)=\"addOtherLink()\">\n    Add link <mat-icon svgIcon=\"add_circle_outline\"></mat-icon>\n  </button> </div>\n\n\n\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport {SubstanceCardBaseFilteredList, SubstanceCardBaseList} from '@gsrs-core/substance-form/base-classes/substance-form-base-filtered-list';\nimport {Link} from '@gsrs-core/substance';\nimport {Subscription} from 'rxjs';\nimport {ScrollToService} from '@gsrs-core/scroll-to/scroll-to.service';\nimport {GoogleAnalyticsService} from '@gsrs-core/google-analytics';\nimport { SubstanceFormOtherLinksService } from './substance-form-other-links.service';\n\n@Component({\n  selector: 'app-substance-form-other-links-card',\n  templateUrl: './substance-form-other-links-card.component.html',\n  styleUrls: ['./substance-form-other-links-card.component.scss']\n})\nexport class SubstanceFormOtherLinksCardComponent extends SubstanceCardBaseFilteredList<Link>\n  implements OnInit, AfterViewInit, OnDestroy, SubstanceCardBaseList {\n  otherLinks: Array<Link>;\n  private subscriptions: Array<Subscription> = [];\n  constructor(\n    private substanceFormOtherLinksService: SubstanceFormOtherLinksService,\n    private scrollToService: ScrollToService,\n    public gaService: GoogleAnalyticsService,\n\n  ) {\n    super(gaService);\n    this.analyticsEventCategory = 'substance form otherLinks';\n  }\n\n  ngOnInit() {\n    this.canAddItemUpdate.emit(true);\n    this.menuLabelUpdate.emit('Other Links');\n  }\n\n  ngAfterViewInit() {\n    const otherLinksSubscription = this.substanceFormOtherLinksService.substanceOtherLinks.subscribe(otherLinks => {\n      this.otherLinks = otherLinks;\n    });\n    this.subscriptions.push(otherLinksSubscription);\n  }\n\n  ngOnDestroy() {\n    this.componentDestroyed.emit();\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  addItem(): void {\n    this.addOtherLink();\n  }\n\n  addOtherLink(): void {\n    this.substanceFormOtherLinksService.addSubstanceOtherLink();\n    setTimeout(() => {\n      this.scrollToService.scrollToElement(`substance-other-links-0`, 'center');\n    });\n  }\n\n  deleteLink(link: Link): void {\n    this.substanceFormOtherLinksService.deleteSubstanceOtherLink(link);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {DynamicComponentLoaderModule} from '@gsrs-core/dynamic-component-loader';\nimport {SubstanceFormModule} from '@gsrs-core/substance-form/substance-form.module';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ScrollToModule} from '@gsrs-core/scroll-to';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {SubstanceFormOtherLinksCardComponent} from '@gsrs-core/substance-form/other-links/substance-form-other-links-card.component';\nimport {MatSelectModule} from '@angular/material/select';\nimport { OtherLinksFormComponent } from './other-links-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SubstanceFormOtherLinksCardComponent),\n    SubstanceFormModule,\n    MatDividerModule,\n    MatIconModule,\n    MatButtonModule,\n    ScrollToModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatPaginatorModule,\n    MatTooltipModule,\n    MatButtonToggleModule,\n    MatInputModule,\n    MatSelectModule\n  ],\n  exports: [\n  ],\n  declarations: [\n    SubstanceFormOtherLinksCardComponent,\n    OtherLinksFormComponent\n  ]\n})\nexport class SubstanceFormOtherLinksModule { }\n"],"sourceRoot":"webpack:///","file":"5846.90718ce47cea90b6.js"}